import { ShaderMaterial, Vector3 } from 'three';
import { Color, Texture } from 'three';
import {shaderMaterial} from '@react-three/drei'

type UninitializedUniform<Value> = { value: Value | null }
/*
export class MeshReflectorMaterial extends ShaderMaterial {
  private _lm0: UninitializedUniform<Texture> = { value: null }
  private _distortionMap: UninitializedUniform<Texture> = { value: null }
  private _tDiffuse: UninitializedUniform<Texture> = { value: null }
  private _tDiffuseBlur: UninitializedUniform<Texture> = { value: null }
  private _textureMatrix: UninitializedUniform<Matrix4> = { value: null }
  private _hasBlur: { value: boolean } = { value: false }
  private _mirror: { value: number } = { value: 0.0 }
  private _mixBlur: { value: number } = { value: 0.0 }
  private _blurStrength: { value: number } = { value: 0.5 }
  private _minDepthThreshold: { value: number } = { value: 0.9 }
  private _maxDepthThreshold: { value: Vector3 } = { value: [1,0,0] }
  private _depthScale: { value: number } = { value: 0 }
  private _depthToBlurRatioBias: { value: number } = { value: 0.25 }
  private _distortion: { value: number } = { value: 1 }
  private _mixContrast: { value: number } = { value: 1.0 }

  constructor(parameters = {}) {
    super(parameters)
    this.setValues(parameters)
  }
  onBeforeCompile(shader) {
    if (!shader.defines?.USE_UV) {
      shader.defines.USE_UV = ''
    }
    shader.uniforms.hasBlur = this._hasBlur
    shader.uniforms.tDiffuse = this._tDiffuse
    shader.uniforms.tDepth = this._tDepth
    shader.uniforms.distortionMap = this._distortionMap
    shader.uniforms.tDiffuseBlur = this._tDiffuseBlur
    shader.uniforms.textureMatrix = this._textureMatrix
    shader.uniforms.mirror = this._mirror
    shader.uniforms.mixBlur = this._mixBlur
    shader.uniforms.mixStrength = this._blurStrength
    shader.uniforms.minDepthThreshold = this._minDepthThreshold
    shader.uniforms.maxDepthThreshold = this._maxDepthThreshold
    shader.uniforms.depthScale = this._depthScale
    shader.uniforms.depthToBlurRatioBias = this._depthToBlurRatioBias
    shader.uniforms.distortion = this._distortion
    shader.uniforms.mixContrast = this._mixContrast
    shader.vertexShader = `
        uniform mat4 textureMatrix;
        varying vec4 my_vUv;
      ${shader.vertexShader}`
    shader.vertexShader = shader.vertexShader.replace(
      '#include <project_vertex>',
      `#include <project_vertex>
        my_vUv = textureMatrix * vec4( position, 1.0 );
        gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );`
    )
    shader.fragmentShader = `
        uniform sampler2D tDiffuse;
        uniform sampler2D tDiffuseBlur;
        uniform sampler2D tDepth;
        uniform sampler2D distortionMap;
        uniform float distortion;
        uniform float cameraNear;
			  uniform float cameraFar;
        uniform bool hasBlur;
        uniform float mixBlur;
        uniform float mirror;
        uniform float mixStrength;
        uniform float minDepthThreshold;
        uniform float maxDepthThreshold;
        uniform float mixContrast;
        uniform float depthScale;
        uniform float depthToBlurRatioBias;
        varying vec4 my_vUv;
        ${shader.fragmentShader}`
    shader.fragmentShader = shader.fragmentShader.replace(
      '#include <emissivemap_fragment>',
      `#include <emissivemap_fragment>
      float distortionFactor = 0.0;
      #ifdef USE_DISTORTION
        distortionFactor = texture2D(distortionMap, vUv).r * distortion;
      #endif
      vec4 new_vUv = my_vUv;
      new_vUv.x += distortionFactor;
      new_vUv.y += distortionFactor;
      vec4 base = texture2DProj(tDiffuse, new_vUv);
      vec4 blur = texture2DProj(tDiffuseBlur, new_vUv);
      vec4 merge = base;
      #ifdef USE_NORMALMAP
        vec2 normal_uv = vec2(0.0);
        vec4 normalColor = texture2D(normalMap, vUv * normalScale);
        vec3 my_normal = normalize( vec3( normalColor.r * 2.0 - 1.0, normalColor.b,  normalColor.g * 2.0 - 1.0 ) );
        vec3 coord = new_vUv.xyz / new_vUv.w;
        normal_uv = coord.xy + coord.z * my_normal.xz * 0.05;
        vec4 base_normal = texture2D(tDiffuse, normal_uv);
        vec4 blur_normal = texture2D(tDiffuseBlur, normal_uv);
        merge = base_normal;
        blur = blur_normal;
      #endif
      float depthFactor = 0.0001;
      float blurFactor = 0.0;
      #ifdef USE_DEPTH
        vec4 depth = texture2DProj(tDepth, new_vUv);
        depthFactor = smoothstep(minDepthThreshold, maxDepthThreshold, 1.0-(depth.r * depth.a));
        depthFactor *= depthScale;
        depthFactor = max(0.0001, min(1.0, depthFactor));
        #ifdef USE_BLUR
          blur = blur * min(1.0, depthFactor + depthToBlurRatioBias);
          merge = merge * min(1.0, depthFactor + 0.5);
        #else
          merge = merge * depthFactor;
        #endif
      #endif
      float reflectorRoughnessFactor = roughness;
      #ifdef USE_ROUGHNESSMAP
        vec4 reflectorTexelRoughness = texture2D( roughnessMap, vUv );
        reflectorRoughnessFactor *= reflectorTexelRoughness.g;
      #endif
      #ifdef USE_BLUR
        blurFactor = min(1.0, mixBlur * reflectorRoughnessFactor);
        merge = mix(merge, blur, blurFactor);
      #endif
      vec4 newMerge = vec4(0.0, 0.0, 0.0, 1.0);
      newMerge.r = (merge.r - 0.5) * mixContrast + 0.5;
      newMerge.g = (merge.g - 0.5) * mixContrast + 0.5;
      newMerge.b = (merge.b - 0.5) * mixContrast + 0.5;
      diffuseColor.rgb = diffuseColor.rgb * ((1.0 - min(1.0, mirror)) + newMerge.rgb * mixStrength);
      `
    )
  }
  get tDiffuse(): Texture | null {
    return this._tDiffuse.value
  }
  set tDiffuse(v: Texture | null) {
    this._tDiffuse.value = v
  }
  get tDepth(): Texture | null {
    return this._tDepth.value
  }
  set tDepth(v: Texture | null) {
    this._tDepth.value = v
  }
  get distortionMap(): Texture | null {
    return this._distortionMap.value
  }
  set distortionMap(v: Texture | null) {
    this._distortionMap.value = v
  }
  get tDiffuseBlur(): Texture | null {
    return this._tDiffuseBlur.value
  }
  set tDiffuseBlur(v: Texture | null) {
    this._tDiffuseBlur.value = v
  }
  get textureMatrix(): Matrix4 | null {
    return this._textureMatrix.value
  }
  set textureMatrix(v: Matrix4 | null) {
    this._textureMatrix.value = v
  }
  get hasBlur(): boolean {
    return this._hasBlur.value
  }
  set hasBlur(v: boolean) {
    this._hasBlur.value = v
  }
  get mirror(): number {
    return this._mirror.value
  }
  set mirror(v: number) {
    this._mirror.value = v
  }
  get mixBlur(): number {
    return this._mixBlur.value
  }
  set mixBlur(v: number) {
    this._mixBlur.value = v
  }
  get mixStrength(): number {
    return this._blurStrength.value
  }
  set mixStrength(v: number) {
    this._blurStrength.value = v
  }
  get minDepthThreshold(): number {
    return this._minDepthThreshold.value
  }
  set minDepthThreshold(v: number) {
    this._minDepthThreshold.value = v
  }
  get maxDepthThreshold(): number {
    return this._maxDepthThreshold.value
  }
  set maxDepthThreshold(v: number) {
    this._maxDepthThreshold.value = v
  }
  get depthScale(): number {
    return this._depthScale.value
  }
  set depthScale(v: number) {
    this._depthScale.value = v
  }
  get depthToBlurRatioBias(): number {
    return this._depthToBlurRatioBias.value
  }
  set depthToBlurRatioBias(v: number) {
    this._depthToBlurRatioBias.value = v
  }
  get distortion(): number {
    return this._distortion.value
  }
  set distortion(v: number) {
    this._distortion.value = v
  }
  get mixContrast(): number {
    return this._mixContrast.value
  }
  set mixContrast(v: number) {
    this._mixContrast.value = v
  }
}
*/

export const NnLightmapMaterial = shaderMaterial(
  {
    lm0: null,
    lm1: null,
    lm2: null,
    lm3: null,
    lm4: null,
    lm5: null,
    lm6: null,
    lm7: null,
},
  // vertex shader
  /* glsl */ `
    varying vec3 vWorldPosition;
    varying vec2 vUv;
    void main() {
      gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);
      vWorldPosition = (modelMatrix * vec4(position, 1.0)).xyz;
      vUv = vec2(1.-uv.x, uv.y);
    }
  `,
  // fragment shader
  /* glsl */ `
    uniform sampler2D lm0;
    uniform sampler2D lm1;
    uniform sampler2D lm2;
    uniform sampler2D lm3;
    uniform sampler2D lm4;
    uniform sampler2D lm5;
    uniform sampler2D lm6;
    uniform sampler2D lm7;
    varying vec3 vWorldPosition;
    varying vec2 vUv;
    void main() {
      vec4 f00 = texture2D(lm0, vUv).rgba;
      vec4 f01 = texture2D(lm1, vUv).rgba;
      vec4 f02 = texture2D(lm2, vUv).rgba;
      vec4 f03 = texture2D(lm3, vUv).rgba;
      vec4 f04 = texture2D(lm4, vUv).rgba;
      vec4 f05 = texture2D(lm5, vUv).rgba;
      vec4 f06 = texture2D(lm6, vUv).rgba;
      vec4 f07 = texture2D(lm7, vUv).rgba;
      vec3 view_dir = -normalize( vWorldPosition - cameraPosition);
      vec4 x=vec4(view_dir,1);
      vec4 f08=sin(x*mat4(-8.66,-1.97,0.37,9.82,2.49,11.34,-2.06,-3.73,9.98,6.82,-10.49,-11.58,0.00,0.00,0.00,0.00)+vec4(-0.31,-0.27,-0.10,0.02));
      vec4 f09=sin(x*mat4(-0.83,9.66,11.08,16.83,4.82,1.69,13.96,7.86,-4.95,-5.90,-1.55,6.15,0.00,0.00,0.00,0.00)+vec4(-0.28,-0.30,-0.07,-0.24));
      vec4 f010=sin(x*mat4(-1.76,0.39,10.95,-16.69,-7.78,9.29,-14.77,-0.56,2.16,-11.91,-16.58,6.50,0.00,0.00,0.00,0.00)+vec4(-0.11,-0.24,0.30,0.29));
      vec4 f011=sin(x*mat4(5.99,14.81,8.50,8.36,19.21,-11.47,-9.66,-4.53,-1.90,18.69,7.61,14.59,0.00,0.00,0.00,0.00)+vec4(-0.19,0.01,-0.31,0.14));
      vec4 f012=sin(x*mat4(16.57,-16.84,-12.55,-1.95,18.44,12.26,11.27,12.30,13.32,8.00,6.47,8.72,0.00,0.00,0.00,0.00)+vec4(-0.31,0.20,0.31,-0.29));
      vec4 f013=sin(x*mat4(15.08,-0.43,16.62,-17.99,11.61,1.62,17.72,-14.71,12.42,7.57,5.79,16.36,0.00,0.00,0.00,0.00)+vec4(-0.19,-0.14,0.01,-0.04));
      vec4 f014=sin(x*mat4(-2.23,14.02,19.39,13.18,5.21,-19.03,11.66,1.13,-16.62,18.81,8.95,-19.04,0.00,0.00,0.00,0.00)+vec4(0.30,0.18,-0.16,-0.29));
      vec4 f015=sin(x*mat4(-17.51,-11.95,-14.13,18.51,17.39,1.87,-12.91,-18.80,15.68,-15.97,21.85,-14.03,0.00,0.00,0.00,0.00)+vec4(0.16,0.31,0.34,0.28));
      vec4 f10=sin(mat4(-0.18,0.26,0.09,0.02,0.09,0.04,0.26,-0.02,-0.02,-0.01,-0.28,-0.27,-0.05,0.28,0.02,0.34)*f00+mat4(-0.20,-0.12,0.04,-0.21,-0.20,-0.23,-0.14,-0.22,-0.08,-0.11,-0.14,-0.20,0.15,0.31,0.29,-0.01)*f01+mat4(-0.10,0.08,0.45,-0.21,0.12,-0.12,-0.14,-0.02,0.21,-0.05,0.14,-0.09,-0.09,0.16,0.07,0.03)*f02+mat4(-0.32,0.11,-0.04,-0.04,-0.14,0.13,-0.39,-0.25,0.07,-0.04,0.12,-0.24,-0.04,0.22,-0.01,-0.19)*f03+mat4(0.12,0.29,0.15,-0.25,-0.15,-0.07,0.12,-0.19,0.16,-0.14,0.22,0.24,-0.09,-0.00,-0.16,-0.10)*f04+mat4(-0.34,0.03,-0.07,-0.00,0.10,0.05,-0.04,0.10,0.10,-0.11,-0.24,-0.17,-0.18,-0.13,-0.18,-0.22)*f05+mat4(-0.31,-0.22,-0.36,0.01,-0.15,0.04,0.30,-0.25,-0.04,0.09,-0.22,0.00,-0.00,0.08,0.16,-0.25)*f06+mat4(-0.01,-0.18,0.25,-0.31,0.12,0.13,0.18,-0.19,0.43,-0.28,-0.00,-0.11,-0.12,0.13,-0.26,0.04)*f07+mat4(0.02,-0.08,0.12,0.12,-0.04,0.16,-0.05,0.07,-0.11,-0.13,0.03,0.11,0.10,0.07,-0.06,-0.13)*f08+mat4(-0.01,-0.07,-0.23,0.02,0.00,0.08,-0.16,-0.25,-0.04,-0.10,-0.14,-0.20,-0.06,0.07,0.05,-0.05)*f09+mat4(-0.21,-0.09,-0.17,0.13,0.00,-0.16,0.01,0.03,0.02,-0.09,-0.00,0.06,0.04,-0.05,-0.05,-0.03)*f010+mat4(0.10,-0.01,-0.16,-0.00,0.08,0.07,-0.05,0.16,-0.07,0.00,0.01,-0.03,-0.01,0.00,-0.03,0.06)*f011+mat4(0.07,0.03,-0.08,-0.00,-0.24,0.15,-0.02,0.23,-0.05,-0.09,0.05,-0.17,-0.04,-0.05,0.07,0.06)*f012+mat4(-0.00,0.01,-0.03,0.13,-0.21,-0.03,0.04,-0.09,-0.11,-0.05,-0.07,0.06,0.02,-0.06,-0.03,-0.06)*f013+mat4(0.05,-0.07,0.09,0.02,0.28,-0.13,0.03,0.09,0.12,-0.03,0.07,-0.05,0.02,-0.03,0.05,-0.06)*f014+mat4(-0.00,-0.02,0.01,-0.15,-0.26,0.14,0.14,0.01,-0.15,0.12,0.08,-0.07,0.03,0.08,-0.08,0.08)*f015+vec4(-0.31,-0.27,-0.10,0.02));
      vec4 f11=sin(mat4(0.28,-0.11,0.13,0.38,0.10,-0.01,-0.30,-0.01,0.06,-0.17,0.23,-0.18,-0.17,-0.02,-0.20,0.15)*f00+mat4(-0.10,0.49,-0.08,0.03,-0.10,0.24,-0.18,-0.03,-0.11,0.16,-0.14,0.21,0.13,-0.37,0.25,0.03)*f01+mat4(0.15,-0.22,-0.30,-0.34,-0.12,-0.10,0.35,0.10,0.03,0.22,0.22,0.29,-0.24,0.20,-0.30,-0.29)*f02+mat4(0.17,0.09,0.39,-0.35,0.05,0.06,0.26,-0.27,-0.32,0.13,-0.08,-0.16,-0.12,-0.19,-0.07,-0.07)*f03+mat4(0.28,-0.02,0.13,-0.22,0.20,0.21,0.12,-0.31,-0.35,-0.05,-0.33,-0.05,0.07,-0.26,0.12,-0.08)*f04+mat4(-0.06,0.12,-0.18,0.22,-0.19,0.13,-0.21,-0.27,-0.23,0.14,0.01,-0.03,-0.13,0.13,0.01,0.01)*f05+mat4(0.09,-0.14,-0.08,-0.13,0.20,-0.05,0.24,0.10,0.19,-0.01,0.45,0.19,-0.24,-0.31,0.11,-0.19)*f06+mat4(-0.04,0.15,-0.20,0.22,-0.00,-0.12,-0.16,-0.21,-0.09,0.07,-0.21,0.04,-0.16,-0.21,-0.16,-0.14)*f07+mat4(0.05,0.02,0.06,-0.13,0.05,-0.14,0.04,-0.04,-0.16,-0.23,0.11,0.09,-0.11,-0.23,-0.15,0.12)*f08+mat4(-0.14,-0.09,-0.15,-0.16,-0.11,0.13,-0.06,-0.23,-0.00,0.24,0.12,0.03,-0.18,0.07,-0.10,-0.03)*f09+mat4(-0.14,-0.19,0.13,-0.04,0.02,0.07,-0.07,0.09,-0.03,0.01,-0.08,-0.05,-0.08,-0.19,-0.07,-0.02)*f010+mat4(0.14,0.24,-0.17,0.01,0.06,-0.08,0.04,-0.01,0.09,-0.05,0.12,-0.14,0.04,-0.06,-0.11,0.14)*f011+mat4(0.04,0.13,-0.02,0.04,-0.11,0.20,0.09,-0.19,0.11,-0.13,0.13,-0.10,-0.07,-0.12,0.09,-0.17)*f012+mat4(0.08,0.01,-0.06,-0.30,-0.27,0.04,0.02,-0.12,-0.03,0.02,0.02,-0.17,0.07,-0.15,0.00,0.18)*f013+mat4(0.09,0.15,0.10,0.01,0.01,0.00,0.08,0.07,-0.28,0.04,0.05,0.03,0.02,-0.11,0.07,-0.22)*f014+mat4(-0.07,0.07,0.09,-0.16,-0.14,0.14,-0.01,0.09,0.31,-0.06,-0.10,0.23,0.07,0.07,0.02,0.03)*f015+vec4(-0.28,-0.30,-0.07,-0.24));
      vec4 f12=sin(mat4(0.08,0.24,-0.03,-0.22,-0.44,0.15,0.06,-0.11,0.10,0.14,-0.03,-0.30,0.07,0.28,-0.13,-0.17)*f00+mat4(0.03,-0.03,0.37,0.19,-0.31,-0.03,-0.24,-0.24,0.15,-0.20,0.03,0.12,-0.18,-0.23,-0.05,0.14)*f01+mat4(0.11,-0.28,0.41,0.24,-0.26,0.51,-0.12,0.09,0.19,-0.18,-0.37,-0.16,0.03,-0.06,0.21,-0.18)*f02+mat4(0.09,-0.12,-0.14,0.17,0.24,0.35,0.07,0.28,0.07,0.21,0.16,0.01,-0.17,0.08,0.05,-0.06)*f03+mat4(0.05,-0.03,0.31,0.14,0.00,-0.08,0.21,0.32,0.17,-0.02,0.34,-0.46,-0.09,-0.23,-0.06,-0.17)*f04+mat4(-0.17,-0.23,0.00,0.06,-0.15,-0.16,0.06,-0.26,0.00,0.17,-0.18,-0.17,0.26,-0.10,0.27,-0.06)*f05+mat4(0.14,0.22,0.18,-0.24,0.26,-0.13,0.12,0.01,-0.27,0.24,0.14,-0.14,0.16,0.07,-0.21,-0.12)*f06+mat4(0.09,-0.12,0.10,0.09,0.16,0.21,-0.13,0.31,0.02,-0.14,0.27,-0.03,-0.07,-0.08,0.23,0.10)*f07+mat4(0.04,0.08,0.15,-0.16,-0.12,-0.20,0.01,-0.02,0.48,0.22,-0.20,-0.44,0.12,0.04,-0.03,-0.20)*f08+mat4(-0.14,0.19,-0.00,0.04,0.06,0.10,-0.08,-0.06,0.23,-0.05,-0.02,0.12,0.09,0.03,0.10,-0.01)*f09+mat4(-0.14,-0.24,-0.09,-0.11,0.08,0.01,0.04,0.23,-0.11,0.17,0.10,0.02,0.07,-0.01,-0.02,-0.09)*f010+mat4(0.26,-0.13,0.06,0.10,0.04,-0.05,-0.16,0.03,0.10,0.24,0.15,0.09,-0.14,0.02,0.00,0.11)*f011+mat4(-0.21,0.05,0.16,0.02,-0.00,-0.07,0.06,-0.22,-0.16,0.16,-0.27,0.23,-0.05,-0.06,0.03,0.04)*f012+mat4(0.03,0.23,0.18,-0.10,-0.20,-0.12,-0.13,-0.01,-0.04,0.06,0.16,-0.05,0.09,0.05,0.05,0.00)*f013+mat4(-0.05,-0.08,0.02,-0.23,0.02,0.22,0.02,-0.02,-0.04,-0.05,-0.25,0.03,-0.01,0.05,-0.04,-0.13)*f014+mat4(0.11,-0.12,0.12,-0.08,-0.10,0.00,0.04,-0.10,-0.18,-0.10,0.01,-0.17,0.01,-0.07,-0.10,0.03)*f015+vec4(-0.11,-0.24,0.30,0.29));
      vec4 f13=sin(mat4(-0.10,0.03,-0.34,0.17,0.03,-0.04,-0.15,0.15,0.45,-0.06,0.19,-0.28,-0.05,0.06,-0.18,0.07)*f00+mat4(-0.38,0.28,-0.27,0.05,0.15,0.18,0.14,-0.18,0.16,-0.31,-0.16,-0.10,0.15,-0.21,0.10,0.08)*f01+mat4(-0.12,-0.15,-0.28,-0.01,-0.13,-0.38,0.26,-0.14,0.02,0.10,-0.07,-0.02,-0.27,0.18,-0.20,-0.14)*f02+mat4(-0.10,-0.15,0.21,0.07,-0.10,-0.35,0.18,-0.17,-0.29,-0.03,-0.06,-0.14,-0.13,-0.02,-0.26,0.02)*f03+mat4(-0.14,-0.07,-0.11,-0.06,-0.03,-0.29,-0.03,0.10,0.22,-0.29,-0.16,-0.24,0.02,-0.29,-0.07,0.01)*f04+mat4(0.07,-0.13,-0.21,0.04,-0.36,-0.00,0.18,0.33,-0.19,0.10,0.17,0.01,-0.09,0.23,-0.12,-0.19)*f05+mat4(0.11,0.24,-0.38,-0.21,-0.03,0.21,0.36,0.01,0.28,-0.11,0.12,0.13,-0.32,-0.01,0.02,0.22)*f06+mat4(-0.18,0.11,-0.06,-0.12,-0.37,0.10,-0.04,0.31,-0.19,0.11,0.29,-0.23,-0.19,0.16,0.14,-0.15)*f07+mat4(-0.22,-0.14,-0.00,0.27,-0.14,0.12,-0.15,0.06,-0.20,-0.02,-0.12,0.24,0.01,-0.04,0.11,-0.03)*f08+mat4(-0.02,0.05,0.00,0.17,0.22,-0.13,0.35,-0.22,-0.12,0.04,-0.23,0.17,-0.03,-0.12,-0.12,-0.24)*f09+mat4(0.09,0.19,-0.16,0.14,0.09,0.12,0.18,0.15,0.05,-0.04,-0.03,-0.05,-0.03,-0.03,-0.00,0.12)*f010+mat4(0.13,-0.07,-0.08,-0.16,0.13,-0.19,0.14,-0.24,0.07,-0.02,-0.11,0.02,-0.05,-0.08,0.05,-0.03)*f011+mat4(0.18,0.09,-0.01,-0.19,-0.15,-0.14,0.04,0.06,0.11,-0.03,-0.03,-0.04,-0.09,-0.01,-0.07,-0.05)*f012+mat4(-0.19,0.03,-0.02,-0.00,-0.28,-0.04,-0.12,0.28,0.12,-0.22,-0.01,0.14,-0.13,0.05,-0.04,0.13)*f013+mat4(-0.14,0.06,0.07,0.03,-0.29,-0.05,0.19,-0.00,0.15,-0.05,0.07,0.04,0.10,-0.04,0.08,-0.06)*f014+mat4(0.01,0.02,-0.04,-0.05,-0.06,-0.11,-0.11,-0.05,-0.03,0.00,-0.01,-0.11,-0.18,-0.03,0.02,-0.19)*f015+vec4(-0.19,0.01,-0.31,0.14));
      vec4 f14=sin(mat4(-0.33,-0.23,-0.29,-0.16,0.25,0.33,0.15,-0.30,0.00,0.11,0.11,0.19,-0.26,0.02,0.26,0.08)*f00+mat4(-0.15,0.07,0.20,0.05,-0.13,0.26,-0.03,-0.03,-0.31,0.01,0.14,-0.31,-0.22,0.20,-0.10,0.14)*f01+mat4(0.16,0.05,0.16,0.20,-0.09,0.11,0.11,0.03,0.18,0.14,-0.12,-0.01,0.20,0.07,-0.11,-0.09)*f02+mat4(-0.16,0.09,0.10,-0.09,-0.14,0.07,0.17,0.35,-0.26,-0.22,-0.07,-0.20,0.15,-0.02,0.20,0.30)*f03+mat4(0.11,0.04,-0.32,-0.06,0.20,0.33,-0.14,0.29,-0.08,-0.03,0.03,0.16,-0.26,0.17,0.18,-0.24)*f04+mat4(0.19,0.14,0.13,0.07,-0.14,0.14,0.09,-0.27,0.17,0.13,0.14,0.06,-0.10,-0.10,-0.07,-0.15)*f05+mat4(-0.25,0.29,-0.08,-0.10,-0.34,0.20,0.32,-0.26,0.20,0.21,-0.05,-0.11,0.20,-0.05,0.22,0.25)*f06+mat4(0.09,0.22,0.06,-0.08,0.10,-0.14,-0.25,-0.08,-0.11,-0.25,-0.05,-0.13,0.18,0.09,-0.06,-0.23)*f07+mat4(0.03,-0.21,0.01,-0.02,-0.14,0.32,-0.20,0.06,0.02,0.06,-0.05,-0.06,0.01,0.01,0.07,0.00)*f08+mat4(-0.10,-0.13,-0.10,-0.03,0.05,-0.14,0.16,0.07,-0.04,0.15,0.05,-0.07,-0.14,0.03,0.00,-0.02)*f09+mat4(-0.07,0.00,0.03,0.05,-0.03,-0.15,-0.22,-0.30,-0.01,0.02,-0.04,0.01,0.04,0.03,-0.01,0.02)*f010+mat4(-0.02,0.03,0.09,0.00,-0.11,0.08,0.12,-0.17,0.11,-0.06,0.00,-0.09,0.08,-0.07,-0.01,-0.07)*f011+mat4(-0.05,0.06,0.07,-0.28,0.16,0.08,0.00,0.26,0.02,0.05,-0.00,0.05,0.07,-0.02,-0.03,-0.00)*f012+mat4(-0.10,-0.02,0.00,0.01,0.03,0.01,-0.08,-0.13,-0.07,-0.06,-0.00,-0.08,0.03,-0.01,-0.01,0.08)*f013+mat4(0.07,0.09,-0.02,-0.05,-0.20,-0.03,-0.06,0.34,-0.10,-0.02,0.03,0.05,0.01,-0.08,0.07,-0.03)*f014+mat4(-0.12,0.01,0.11,-0.09,0.17,0.30,-0.16,0.05,0.07,0.07,-0.08,0.07,0.02,-0.03,-0.06,-0.05)*f015+vec4(-0.31,0.20,0.31,-0.29));
      vec4 f15=sin(mat4(-0.03,0.02,0.14,-0.01,0.05,-0.24,-0.01,0.26,-0.01,-0.30,0.30,0.09,0.16,-0.19,-0.12,0.18)*f00+mat4(-0.06,0.04,-0.10,0.14,0.17,-0.07,0.10,-0.27,0.16,0.33,0.29,-0.09,0.23,0.11,0.21,-0.01)*f01+mat4(0.05,-0.28,0.13,-0.10,-0.13,-0.20,0.25,-0.23,-0.01,-0.32,-0.10,0.25,0.07,-0.10,0.05,0.12)*f02+mat4(0.29,0.13,0.28,-0.08,-0.01,0.22,0.01,0.23,0.33,0.09,0.33,-0.16,-0.15,-0.17,-0.13,0.14)*f03+mat4(-0.32,-0.26,0.25,-0.02,0.12,0.21,0.06,-0.03,-0.12,-0.21,0.11,-0.33,-0.40,-0.20,0.09,-0.08)*f04+mat4(0.00,0.44,-0.26,-0.01,0.08,-0.10,-0.01,0.10,0.00,-0.05,0.30,-0.13,0.06,-0.14,0.01,-0.14)*f05+mat4(0.05,-0.05,-0.06,0.21,-0.27,0.20,0.17,0.09,-0.21,0.05,-0.32,0.31,-0.20,-0.19,-0.07,0.23)*f06+mat4(-0.07,0.21,-0.37,-0.24,0.32,-0.23,0.01,0.13,-0.32,-0.19,0.14,0.20,-0.12,-0.13,-0.09,0.26)*f07+mat4(0.02,0.14,-0.06,-0.08,0.18,-0.01,-0.09,-0.15,0.33,-0.24,-0.02,-0.06,-0.01,-0.02,0.07,0.03)*f08+mat4(0.05,0.04,0.07,-0.09,-0.16,-0.02,0.01,-0.02,0.23,0.09,-0.06,0.03,-0.06,-0.01,-0.06,-0.04)*f09+mat4(-0.03,-0.10,-0.02,-0.01,-0.16,-0.01,-0.05,0.06,-0.16,0.18,0.19,-0.03,-0.01,0.04,0.03,0.03)*f010+mat4(0.07,0.09,-0.05,0.03,0.00,-0.08,0.14,0.15,0.14,0.05,0.18,-0.03,0.06,-0.02,0.04,-0.10)*f011+mat4(-0.12,-0.03,-0.03,0.13,-0.11,0.18,-0.01,-0.06,-0.09,-0.20,0.06,-0.19,0.01,-0.01,-0.04,-0.04)*f012+mat4(-0.09,0.05,0.00,-0.10,-0.09,0.03,0.18,-0.01,0.12,0.04,-0.16,-0.06,-0.01,0.03,-0.01,0.04)*f013+mat4(0.08,-0.08,-0.02,-0.12,-0.06,0.01,-0.03,0.02,-0.12,0.08,-0.09,-0.47,-0.04,0.05,-0.06,0.03)*f014+mat4(0.05,0.06,0.08,0.01,-0.03,-0.11,-0.06,-0.02,-0.02,0.31,0.06,-0.10,-0.01,0.03,0.02,-0.02)*f015+vec4(-0.19,-0.14,0.01,-0.04));
      vec4 f16=sin(mat4(0.07,0.10,0.05,0.32,-0.08,-0.36,-0.03,-0.17,-0.09,-0.35,0.24,-0.00,-0.28,-0.20,-0.19,0.20)*f00+mat4(0.16,-0.27,-0.06,-0.27,-0.16,-0.10,-0.15,0.20,-0.07,0.18,0.00,0.17,-0.13,0.25,0.19,0.27)*f01+mat4(0.22,-0.09,0.32,0.19,-0.22,-0.11,0.14,-0.17,0.21,-0.23,-0.07,-0.11,-0.04,0.07,0.22,0.28)*f02+mat4(0.09,-0.36,-0.13,-0.02,0.22,-0.21,-0.16,-0.32,-0.13,-0.12,0.02,0.10,-0.18,-0.11,0.06,0.02)*f03+mat4(0.12,0.03,-0.09,-0.19,0.17,0.02,0.01,0.19,0.29,-0.21,-0.15,0.22,0.02,-0.19,0.40,0.25)*f04+mat4(0.20,-0.00,-0.11,-0.03,-0.03,-0.01,0.13,0.01,-0.00,0.16,-0.19,-0.28,0.05,0.15,-0.06,-0.16)*f05+mat4(-0.08,-0.23,0.22,0.36,-0.16,0.21,0.14,-0.12,-0.12,-0.08,-0.10,-0.03,-0.25,0.19,0.02,0.17)*f06+mat4(0.28,0.01,0.09,0.07,-0.16,-0.11,0.06,0.04,-0.15,-0.19,-0.19,-0.12,0.26,0.12,-0.06,0.08)*f07+mat4(-0.26,-0.05,0.05,0.15,-0.19,0.12,0.16,0.28,-0.06,-0.03,-0.02,-0.11,-0.33,0.17,-0.05,0.14)*f08+mat4(-0.14,-0.02,-0.11,0.12,-0.47,0.16,-0.13,0.08,0.02,0.19,0.10,-0.00,0.30,0.23,0.10,0.05)*f09+mat4(-0.02,-0.04,0.19,0.04,0.01,0.01,-0.15,-0.02,0.13,0.07,-0.13,-0.10,0.22,0.02,-0.01,-0.11)*f010+mat4(-0.07,-0.02,0.15,0.12,0.18,-0.18,0.06,-0.01,-0.03,-0.13,0.11,-0.22,-0.04,0.06,-0.12,0.13)*f011+mat4(0.05,0.08,0.07,-0.23,-0.07,0.08,-0.05,-0.14,0.07,-0.15,0.03,-0.04,-0.22,-0.15,0.06,0.17)*f012+mat4(0.10,-0.01,0.00,0.00,-0.03,0.09,0.15,0.08,-0.04,-0.05,0.05,-0.00,-0.16,0.12,-0.03,-0.07)*f013+mat4(0.15,0.23,-0.09,-0.03,-0.00,0.15,-0.04,0.19,-0.08,-0.03,0.12,-0.07,0.19,0.10,-0.03,-0.27)*f014+mat4(-0.07,-0.11,0.14,-0.10,0.05,-0.13,-0.17,0.05,0.05,-0.15,-0.26,0.02,-0.20,-0.10,0.03,-0.09)*f015+vec4(0.30,0.18,-0.16,-0.29));
      vec4 f17=sin(mat4(0.27,-0.08,-0.23,0.10,0.23,-0.22,0.04,-0.19,0.24,0.06,0.25,0.19,-0.18,0.21,-0.06,-0.12)*f00+mat4(-0.16,-0.08,0.06,-0.38,-0.07,-0.16,-0.09,-0.04,-0.12,-0.43,0.18,-0.03,-0.03,-0.11,-0.15,0.00)*f01+mat4(0.07,-0.07,0.15,-0.03,-0.28,-0.29,0.18,0.31,-0.12,-0.20,-0.20,-0.01,-0.17,0.43,0.20,-0.16)*f02+mat4(-0.27,-0.07,-0.27,0.40,0.10,0.02,0.19,-0.03,0.19,-0.27,0.02,0.03,-0.07,-0.19,-0.25,0.22)*f03+mat4(0.17,0.17,0.43,-0.08,-0.02,-0.14,0.07,0.03,-0.09,0.28,0.16,0.11,-0.13,0.03,-0.18,-0.19)*f04+mat4(0.01,0.23,-0.09,-0.35,0.10,-0.31,0.04,-0.20,-0.18,0.24,-0.17,-0.04,0.05,0.18,-0.26,-0.21)*f05+mat4(0.05,-0.04,-0.02,0.24,-0.29,-0.37,0.04,0.21,-0.08,-0.07,-0.12,-0.05,0.22,0.14,-0.35,-0.31)*f06+mat4(0.13,-0.14,-0.01,0.26,-0.13,0.23,0.01,-0.17,0.19,0.16,0.26,-0.16,-0.18,-0.14,-0.25,0.30)*f07+mat4(-0.07,0.08,0.09,-0.06,0.02,0.02,-0.09,-0.15,0.09,-0.11,-0.04,-0.08,-0.06,0.11,0.07,-0.01)*f08+mat4(0.05,0.22,0.00,-0.05,-0.00,0.05,0.09,-0.17,0.09,-0.05,0.01,0.06,-0.20,0.18,0.14,-0.15)*f09+mat4(0.09,0.02,-0.14,0.04,0.02,0.01,0.09,0.02,0.07,0.06,0.01,-0.06,0.15,0.05,-0.02,-0.08)*f010+mat4(0.08,-0.22,-0.09,0.00,-0.05,-0.05,0.04,-0.10,-0.03,0.08,0.02,-0.08,0.10,-0.13,0.10,-0.10)*f011+mat4(-0.05,0.16,0.02,0.19,-0.04,-0.06,0.07,-0.06,0.04,-0.09,-0.04,-0.04,0.00,-0.12,0.14,0.10)*f012+mat4(-0.16,0.11,0.09,-0.03,-0.08,-0.12,-0.14,-0.05,0.01,-0.02,0.00,0.02,-0.02,-0.10,-0.05,-0.11)*f013+mat4(-0.01,-0.05,0.09,0.12,-0.02,0.03,-0.01,-0.05,-0.02,0.03,-0.00,-0.07,-0.08,-0.03,-0.03,-0.16)*f014+mat4(-0.06,-0.14,-0.10,-0.10,-0.11,0.20,0.13,-0.04,0.01,-0.02,-0.08,-0.02,-0.01,0.09,0.04,-0.02)*f015+vec4(0.16,0.31,0.34,0.28));
      vec4 f20=sin(mat4(0.17,-0.25,0.48,0.18,0.10,0.30,-0.22,-0.48,-0.30,-0.35,0.23,-0.40,0.07,-0.16,-0.14,-0.38)*f10+mat4(0.14,-0.24,0.22,0.26,-0.10,-0.03,-0.26,0.06,-0.21,0.09,-0.10,-0.46,0.28,-0.12,0.37,0.03)*f11+mat4(-0.13,-0.29,0.13,-0.17,0.28,0.13,-0.21,-0.35,0.16,0.07,-0.25,-0.37,-0.06,-0.35,-0.08,0.47)*f12+mat4(-0.21,0.24,-0.20,-0.39,0.22,0.24,-0.05,-0.16,-0.21,-0.26,0.33,0.32,0.12,-0.00,0.16,-0.20)*f13+mat4(-0.15,0.08,0.22,0.49,-0.24,0.17,0.07,-0.17,-0.22,0.14,0.02,-0.28,0.27,-0.40,0.02,-0.15)*f14+mat4(0.05,0.30,0.20,-0.47,-0.14,0.16,0.12,0.30,-0.32,0.40,0.42,0.38,0.21,-0.07,-0.30,0.30)*f15+mat4(-0.27,0.26,0.26,0.35,0.33,-0.26,0.24,0.13,-0.49,-0.14,-0.20,0.14,-0.13,-0.10,-0.04,-0.39)*f16+mat4(-0.16,0.08,-0.22,0.30,0.10,0.11,0.37,-0.02,-0.04,-0.23,-0.26,0.23,0.43,0.48,0.32,-0.05)*f17+vec4(-0.31,-0.27,-0.10,0.02));     
      vec4 f21=sin(mat4(0.26,-0.25,-0.13,-0.03,0.11,0.23,-0.29,0.23,-0.02,-0.07,0.18,0.26,-0.38,0.16,0.40,-0.60)*f10+mat4(0.12,-0.20,-0.24,-0.10,0.04,-0.23,0.21,-0.14,-0.14,-0.07,-0.15,-0.25,-0.10,-0.11,-0.10,0.21)*f11+mat4(-0.36,0.07,-0.23,0.15,0.33,0.21,-0.13,-0.39,0.21,-0.14,0.27,-0.05,0.05,0.12,0.29,-0.21)*f12+mat4(-0.12,-0.07,0.07,-0.14,0.39,0.24,0.25,0.31,0.05,-0.38,-0.14,0.04,-0.10,0.11,-0.52,0.13)*f13+mat4(0.36,-0.05,0.66,-0.11,-0.08,0.30,-0.25,-0.68,-0.26,-0.20,-0.38,-0.03,0.08,0.21,-0.14,0.37)*f14+mat4(0.16,0.08,0.00,-0.02,-0.23,0.40,0.38,-0.07,-0.37,-0.28,0.06,0.37,0.01,-0.54,-0.10,0.20)*f15+mat4(0.14,-0.33,-0.19,0.22,0.08,-0.15,0.19,0.10,0.00,0.11,-0.30,0.09,0.35,0.52,0.08,-0.29)*f16+mat4(0.36,-0.31,0.21,-0.26,-0.22,-0.06,-0.32,0.15,0.21,0.16,0.22,-0.04,0.17,-0.30,0.50,0.19)*f17+vec4(-0.28,-0.30,-0.07,-0.24));     
      vec4 f22=sin(mat4(-0.29,-0.08,0.53,-0.29,-0.08,0.37,-0.33,0.31,-0.08,0.20,-0.29,0.11,-0.38,0.21,-0.33,0.28)*f10+mat4(-0.24,0.16,0.60,0.32,-0.45,-0.18,0.14,0.60,0.01,0.07,-0.43,-0.17,0.28,-0.06,0.22,-0.37)*f11+mat4(-0.17,-0.36,0.35,0.09,0.01,-0.05,-0.27,0.07,0.21,0.15,-0.15,0.31,-0.12,0.23,0.20,-0.40)*f12+mat4(-0.06,0.15,-0.18,0.37,0.31,-0.27,-0.55,0.30,-0.05,0.15,0.50,-0.11,-0.44,0.13,0.53,-0.28)*f13+mat4(-0.48,-0.24,0.45,0.47,-0.26,0.20,-0.27,-0.02,0.25,-0.12,0.22,0.08,-0.09,-0.20,-0.17,0.07)*f14+mat4(-0.09,0.05,-0.30,0.48,-0.10,-0.09,0.07,0.27,-0.28,0.47,-0.18,-0.18,-0.15,0.11,-0.17,-0.01)*f15+mat4(0.36,0.11,-0.32,0.41,-0.25,-0.06,0.35,-0.28,-0.34,-0.22,-0.17,0.23,0.09,-0.05,0.35,0.28)*f16+mat4(-0.42,0.06,-0.18,0.48,-0.19,0.01,-0.14,-0.22,-0.17,0.18,-0.29,-0.08,0.29,0.60,0.08,0.02)*f17+vec4(-0.11,-0.24,0.30,0.29));    
      vec4 f23=sin(mat4(-0.00,-0.14,-0.27,0.22,-0.04,-0.08,0.02,0.32,-0.04,0.06,0.46,0.23,-0.19,0.34,-0.12,0.13)*f10+mat4(-0.01,0.28,0.15,-0.27,-0.35,0.16,-0.30,-0.04,0.06,-0.16,-0.01,0.11,0.34,-0.13,0.25,-0.18)*f11+mat4(-0.14,-0.07,-0.28,0.33,0.06,0.36,0.34,0.05,-0.14,-0.06,-0.14,-0.23,-0.02,0.01,-0.14,0.12)*f12+mat4(-0.19,0.06,0.29,0.29,-0.35,-0.18,-0.16,-0.28,0.08,-0.12,-0.24,-0.36,0.31,0.35,0.25,-0.06)*f13+mat4(-0.22,-0.20,-0.04,0.09,-0.26,0.15,-0.10,0.54,0.10,-0.05,-0.18,0.38,0.17,-0.46,0.05,0.14)*f14+mat4(0.39,0.23,-0.05,-0.11,-0.09,0.00,-0.18,0.02,-0.00,0.34,0.15,0.28,-0.35,0.18,-0.30,-0.08)*f15+mat4(-0.16,0.05,-0.21,-0.10,0.34,0.24,0.35,0.29,-0.12,-0.08,0.04,0.01,0.17,-0.40,0.28,-0.15)*f16+mat4(-0.28,0.07,0.22,-0.01,-0.16,0.34,-0.27,-0.43,-0.02,-0.18,-0.31,-0.09,-0.14,-0.22,0.08,-0.17)*f17+vec4(-0.19,0.01,-0.31,0.14));vec4 f24=sin(mat4(-0.16,-0.02,-0.08,-0.07,-0.43,0.06,-0.38,0.23,0.47,0.18,-0.61,-0.07,0.05,-0.08,-0.16,0.14)*f10+mat4(-0.02,-0.03,0.33,0.48,0.07,0.01,-0.17,-0.46,-0.06,0.11,0.24,-0.47,0.20,0.15,-0.03,-0.10)*f11+mat4(-0.23,-0.09,0.17,-0.12,-0.28,-0.42,-0.13,0.42,-0.43,0.06,-0.05,0.32,0.09,-0.13,-0.50,0.12)*f12+mat4(-0.22,0.21,0.32,-0.01,-0.02,-0.23,-0.10,-0.24,-0.40,-0.09,0.19,0.04,0.02,0.12,0.18,-0.27)*f13+mat4(0.27,-0.15,0.07,-0.56,-0.15,-0.07,-0.36,-0.33,-0.22,0.44,-0.05,0.31,0.44,0.22,-0.35,-0.22)*f14+mat4(0.02,0.14,0.14,-0.31,0.34,0.05,-0.06,0.08,-0.04,-0.24,-0.52,0.44,0.27,0.42,-0.31,0.16)*f15+mat4(0.26,0.35,0.06,0.12,0.03,0.17,-0.37,-0.21,0.24,-0.18,-0.29,0.45,-0.38,-0.28,0.31,-0.32)*f16+mat4(0.01,0.15,0.03,0.30,0.06,-0.12,-0.13,-0.58,0.21,-0.38,-0.28,-0.57,0.24,-0.02,0.15,-0.31)*f17+vec4(-0.31,0.20,0.31,-0.29));  
      vec4 f25=sin(mat4(-0.24,-0.14,0.30,0.20,0.40,0.12,-0.18,-0.26,-0.09,0.07,-0.12,0.34,-0.40,-0.16,0.03,-0.41)*f10+mat4(-0.24,-0.06,-0.04,-0.05,-0.48,0.15,-0.25,-0.29,0.15,-0.00,-0.09,0.18,0.06,0.25,-0.19,0.04)*f11+mat4(0.45,0.10,0.02,0.37,0.49,0.32,-0.23,-0.12,0.26,-0.40,-0.27,-0.45,-0.11,0.03,0.07,-0.23)*f12+mat4(-0.26,-0.13,0.06,-0.26,-0.19,-0.43,-0.46,0.11,0.11,-0.26,-0.35,0.03,0.29,-0.23,0.14,0.47)*f13+mat4(-0.23,-0.11,0.50,0.16,-0.22,0.39,-0.33,-0.23,0.06,-0.03,0.10,-0.01,-0.10,0.22,0.29,-0.22)*f14+mat4(-0.43,-0.18,-0.33,0.12,-0.04,-0.49,-0.16,0.28,-0.21,-0.10,-0.26,-0.01,0.48,-0.28,-0.02,-0.31)*f15+mat4(-0.39,0.02,-0.25,0.26,-0.16,0.05,0.17,-0.50,-0.20,-0.24,-0.11,-0.15,0.28,-0.23,0.30,-0.14)*f16+mat4(-0.11,0.27,0.24,-0.21,-0.26,-0.31,-0.00,-0.18,-0.04,0.05,0.26,-0.22,0.05,-0.12,-0.18,-0.20)*f17+vec4(-0.19,-0.14,0.01,-0.04));
      vec4 f26=sin(mat4(0.09,-0.27,0.15,0.35,0.20,0.47,0.02,0.20,-0.13,-0.04,0.25,0.16,-0.09,-0.15,-0.28,0.43)*f10+mat4(0.14,0.17,-0.15,-0.06,-0.24,-0.39,0.32,-0.16,-0.09,-0.13,0.03,-0.15,0.10,0.01,0.07,-0.09)*f11+mat4(0.25,0.12,-0.04,-0.20,-0.22,0.41,0.01,0.36,0.19,-0.18,-0.24,0.27,-0.01,-0.35,0.09,0.13)*f12+mat4(0.10,0.10,0.13,0.06,0.12,0.04,-0.08,-0.09,0.21,-0.07,-0.11,0.09,0.20,-0.07,0.03,0.30)*f13+mat4(-0.38,-0.05,-0.11,-0.39,0.38,0.44,-0.44,0.25,0.08,-0.04,0.37,-0.01,0.23,-0.00,0.11,0.21)*f14+mat4(0.29,0.13,-0.21,0.53,0.19,-0.06,0.22,0.13,0.07,0.29,-0.03,-0.50,-0.06,-0.19,0.19,0.34)*f15+mat4(0.03,-0.22,-0.00,0.17,0.21,0.25,0.06,-0.10,0.04,0.00,-0.21,-0.01,0.17,-0.15,-0.07,0.23)*f16+mat4(0.09,-0.05,0.13,-0.07,0.08,0.23,0.29,-0.22,-0.02,0.25,0.47,-0.24,0.07,0.06,-0.25,-0.35)*f17+vec4(0.30,0.18,-0.16,-0.29));
      vec4 f27=sin(mat4(-0.15,0.48,0.38,0.39,0.37,0.42,0.10,0.48,0.18,-0.27,-0.01,0.18,-0.15,0.10,-0.27,0.28)*f10+mat4(-0.03,-0.50,0.03,0.54,-0.18,-0.19,-0.30,-0.26,0.30,0.00,0.28,0.27,0.23,-0.11,-0.50,-0.25)*f11+mat4(-0.34,-0.19,-0.08,0.23,-0.14,-0.24,0.05,0.08,-0.05,0.04,0.15,-0.10,-0.27,0.04,0.31,0.14)*f12+mat4(0.09,0.33,0.17,-0.34,0.33,0.08,-0.28,-0.30,0.15,0.15,0.08,-0.07,0.20,0.06,0.07,0.09)*f13+mat4(0.21,0.15,0.13,0.12,-0.43,0.29,0.17,0.00,-0.36,0.09,-0.35,-0.10,0.31,-0.19,-0.42,-0.15)*f14+mat4(0.58,0.19,0.45,0.36,-0.21,-0.26,0.19,-0.26,-0.17,0.19,0.20,-0.32,-0.29,-0.62,-0.22,0.25)*f15+mat4(-0.11,0.31,0.18,-0.16,0.46,-0.02,-0.08,-0.16,-0.16,0.07,-0.11,0.16,-0.30,0.18,-0.19,-0.26)*f16+mat4(0.44,0.02,0.33,-0.00,0.15,-0.02,-0.21,-0.21,-0.06,0.03,0.16,0.09,0.29,-0.09,-0.05,0.11)*f17+vec4(0.16,0.31,0.34,0.28));
      vec4 f30=sin(mat4(-0.28,0.23,0.06,-0.21,-0.20,0.05,0.02,0.21,0.24,-0.02,0.07,0.20,0.34,0.09,-0.46,0.16)*f20+mat4(0.00,0.17,-0.08,-0.39,-0.07,-0.24,0.08,-0.23,0.45,0.10,0.08,0.39,-0.10,0.11,0.50,-0.04)*f21+mat4(0.19,0.13,-0.49,-0.34,0.19,0.09,-0.12,0.02,-0.32,0.23,0.13,0.12,0.09,-0.22,0.38,0.15)*f22+mat4(0.30,0.45,0.04,-0.03,-0.21,-0.22,-0.35,-0.30,0.16,0.14,0.37,0.06,0.19,-0.29,0.20,0.64)*f23+mat4(-0.14,-0.12,0.36,0.12,0.05,-0.10,-0.17,0.22,-0.03,0.07,-0.19,0.01,-0.26,0.15,-0.20,0.16)*f24+mat4(-0.04,0.31,0.31,-0.09,0.14,-0.18,-0.05,-0.33,-0.24,-0.23,0.11,-0.52,0.12,-0.32,0.11,0.01)*f25+mat4(-0.29,-0.01,0.20,-0.08,-0.13,-0.08,-0.10,0.09,-0.01,0.41,0.26,-0.24,-0.20,0.27,0.28,0.23)*f26+mat4(0.02,-0.27,-0.10,0.28,0.15,0.28,0.38,0.06,0.44,-0.01,-0.07,-0.22,0.06,0.14,0.41,-0.22)*f27+vec4(-0.31,-0.27,-0.10,0.02));
      vec4 f31=sin(mat4(0.34,0.29,-0.10,-0.42,0.35,0.52,-0.15,-0.25,0.15,-0.19,0.14,0.01,0.19,0.03,-0.18,0.16)*f20+mat4(0.50,0.51,-0.01,0.31,-0.13,-0.10,-0.27,-0.05,-0.28,0.21,0.06,0.10,0.10,-0.06,-0.39,-0.23)*f21+mat4(0.14,-0.32,0.56,0.39,0.16,-0.34,0.07,0.23,0.03,0.28,0.24,0.08,-0.18,-0.11,0.06,-0.09)*f22+mat4(-0.22,0.01,-0.02,0.08,-0.03,0.16,0.07,0.23,-0.05,-0.11,0.35,0.34,-0.29,-0.05,-0.25,-0.21)*f23+mat4(0.07,-0.14,-0.20,0.34,0.28,-0.07,0.08,-0.02,-0.26,0.11,0.13,0.10,0.01,-0.13,-0.04,-0.03)*f24+mat4(0.38,-0.34,-0.29,0.31,0.27,0.46,0.40,0.26,-0.13,0.00,-0.25,0.13,0.33,-0.11,-0.32,-0.25)*f25+mat4(0.52,-0.44,0.11,0.39,-0.04,-0.38,0.05,-0.35,0.10,-0.00,-0.02,0.22,-0.25,0.25,0.13,0.18)*f26+mat4(-0.22,0.15,0.37,-0.01,-0.41,0.02,0.20,0.34,0.12,-0.22,-0.01,0.11,-0.00,-0.08,-0.19,0.02)*f27+vec4(-0.28,-0.30,-0.07,-0.24));
      vec4 f32=sin(mat4(0.09,0.03,-0.03,0.10,-0.22,0.03,0.31,0.35,0.41,-0.21,-0.54,0.37,-0.20,-0.16,0.40,-0.29)*f20+mat4(-0.22,-0.38,-0.15,-0.30,-0.16,-0.16,0.40,-0.09,0.11,0.20,0.45,0.52,0.06,-0.01,-0.10,-0.05)*f21+mat4(-0.08,0.03,-0.01,-0.29,-0.07,0.70,-0.20,-0.69,0.50,-0.30,0.43,0.33,0.24,-0.21,0.29,0.29)*f22+mat4(-0.31,-0.02,0.06,-0.07,-0.11,0.44,0.32,0.44,0.16,-0.45,0.38,0.54,0.20,-0.14,0.12,0.10)*f23+mat4(-0.36,-0.19,-0.00,-0.06,-0.11,-0.45,0.35,0.13,0.25,0.06,-0.47,-0.17,-0.45,-0.11,-0.05,0.12)*f24+mat4(-0.27,0.32,-0.28,0.37,-0.49,0.61,0.02,0.12,0.01,0.08,-0.11,-0.29,-0.11,-0.01,-0.29,0.23)*f25+mat4(-0.05,-0.07,0.16,-0.21,0.22,0.47,0.12,-0.54,-0.11,0.08,-0.27,0.32,0.03,0.14,-0.13,-0.33)*f26+mat4(-0.19,0.15,0.06,0.17,0.05,0.23,0.01,0.07,0.62,0.41,0.46,0.49,0.13,0.04,0.05,-0.08)*f27+vec4(-0.11,-0.24,0.30,0.29));
      vec4 f33=sin(mat4(-0.23,0.31,-0.08,-0.11,-0.20,-0.24,0.21,-0.03,0.18,-0.02,0.07,0.24,0.30,-0.75,0.19,0.30)*f20+mat4(-0.27,-0.17,-0.48,-0.20,0.18,0.34,-0.22,0.29,0.15,0.24,-0.30,0.39,0.10,-0.13,0.04,0.46)*f21+mat4(0.31,-0.17,-0.27,0.05,-0.29,0.12,0.18,-0.01,-0.15,-0.02,0.05,-0.22,-0.05,-0.15,-0.10,0.08)*f22+mat4(0.09,0.06,0.03,-0.35,0.04,-0.09,-0.18,0.31,-0.04,0.04,-0.34,0.27,0.20,-0.30,0.47,-0.46)*f23+mat4(0.46,-0.09,0.07,-0.18,-0.08,-0.39,-0.12,-0.08,0.03,-0.24,0.40,-0.52,0.09,0.29,0.07,0.10)*f24+mat4(0.32,0.07,-0.17,-0.31,0.09,0.19,-0.18,0.31,-0.25,0.23,0.33,0.00,0.51,-0.40,0.16,-0.02)*f25+mat4(0.36,-0.12,-0.09,0.25,-0.22,0.18,-0.27,0.03,-0.13,0.10,0.18,-0.41,-0.00,0.18,-0.21,0.07)*f26+mat4(0.28,-0.35,0.03,0.44,0.22,-0.08,-0.13,0.07,0.27,-0.30,-0.27,-0.16,-0.07,-0.11,0.12,-0.12)*f27+vec4(-0.19,0.01,-0.31,0.14));       
      vec4 f34=sin(mat4(0.10,0.35,0.48,-0.43,-0.18,-0.15,-0.26,0.11,-0.24,0.38,0.14,0.00,-0.24,0.11,0.12,-0.45)*f20+mat4(-0.00,-0.28,0.32,0.31,0.14,0.21,0.25,-0.02,-0.19,-0.47,0.08,-0.03,0.05,-0.15,-0.19,0.09)*f21+mat4(-0.05,-0.02,-0.16,0.13,0.32,0.25,0.00,0.07,0.24,-0.35,-0.12,0.04,-0.32,-0.02,0.04,0.04)*f22+mat4(-0.15,0.22,0.03,0.32,0.09,-0.25,-0.07,0.10,-0.23,-0.10,0.21,-0.00,0.32,-0.24,-0.08,-0.03)*f23+mat4(-0.37,-0.22,0.24,-0.02,-0.38,-0.06,-0.01,-0.23,0.04,-0.33,0.01,0.33,-0.31,0.33,-0.07,-0.15)*f24+mat4(-0.38,0.18,-0.06,-0.11,-0.15,-0.11,0.07,-0.29,0.29,0.08,-0.24,-0.32,0.28,-0.36,-0.17,0.33)*f25+mat4(-0.14,0.01,0.18,-0.22,-0.03,-0.22,0.00,0.13,-0.18,0.08,-0.01,-0.10,-0.15,-0.22,0.39,0.04)*f26+mat4(0.23,0.10,0.23,-0.54,-0.24,0.01,-0.36,-0.08,0.29,0.00,0.20,-0.17,-0.20,-0.06,0.28,0.05)*f27+vec4(-0.31,0.20,0.31,-0.29));  
      vec4 f35=sin(mat4(0.06,-0.03,0.29,0.09,-0.19,-0.23,-0.70,0.19,-0.12,0.06,-0.07,-0.06,-0.24,-0.09,-0.42,0.06)*f20+mat4(0.18,0.24,-0.15,0.02,-0.11,0.15,0.23,0.21,-0.01,0.17,0.24,-0.20,-0.36,-0.38,0.50,-0.28)*f21+mat4(-0.16,0.20,-0.19,0.07,-0.29,0.33,-0.11,-0.17,0.33,-0.29,0.20,0.09,-0.26,0.00,-0.32,0.19)*f22+mat4(-0.20,0.13,0.27,-0.04,-0.24,-0.20,-0.38,-0.10,0.52,0.13,-0.00,-0.20,-0.04,0.02,0.19,0.29)*f23+mat4(-0.18,0.29,0.10,-0.39,0.35,-0.62,-0.45,0.23,-0.12,0.17,-0.08,-0.08,-0.07,0.20,-0.34,-0.14)*f24+mat4(0.03,-0.37,0.34,-0.29,-0.38,-0.29,-0.43,0.45,-0.15,-0.13,0.18,-0.21,0.17,0.28,-0.43,0.39)*f25+mat4(-0.16,0.37,-0.16,-0.01,-0.16,-0.18,-0.50,0.09,-0.38,0.07,0.07,-0.50,-0.23,0.42,-0.45,-0.41)*f26+mat4(-0.14,-0.16,0.12,0.26,0.46,-0.32,-0.42,0.01,0.24,-0.25,-0.03,0.23,0.27,-0.17,0.28,-0.36)*f27+vec4(-0.19,-0.14,0.01,-0.04));
      vec4 f36=sin(mat4(-0.05,-0.63,0.38,-0.33,-0.27,0.13,0.02,-0.37,0.34,-0.18,-0.53,0.38,-0.15,0.54,0.05,-0.35)*f20+mat4(-0.11,-0.45,-0.02,-0.39,-0.37,-0.14,-0.31,0.23,-0.06,0.42,-0.02,0.17,-0.23,-0.21,0.13,-0.13)*f21+mat4(0.31,-0.25,-0.01,0.06,-0.05,0.33,-0.35,0.08,0.43,-0.28,0.32,0.49,0.36,0.10,0.17,0.28)*f22+mat4(-0.19,0.35,0.40,0.26,0.46,-0.10,0.17,0.07,-0.49,0.04,0.27,0.07,-0.14,-0.03,-0.52,-0.31)*f23+mat4(-0.14,0.37,0.01,-0.02,0.41,-0.06,0.02,-0.17,0.30,0.13,-0.14,-0.29,-0.32,-0.34,0.28,0.21)*f24+mat4(0.25,0.01,0.34,-0.08,0.15,0.27,-0.04,0.08,0.30,0.31,-0.01,-0.37,-0.10,0.24,-0.07,0.23)*f25+mat4(0.01,-0.09,0.23,-0.30,0.07,0.01,0.25,-0.14,0.35,-0.16,0.26,-0.23,0.03,-0.45,0.02,0.21)*f26+mat4(0.01,-0.18,0.27,-0.20,-0.08,0.15,0.12,0.22,0.38,-0.10,0.20,0.27,-0.46,-0.11,0.45,0.14)*f27+vec4(0.30,0.18,-0.16,-0.29));
      vec4 f37=sin(mat4(-0.13,-0.27,0.23,-0.06,-0.07,0.07,0.35,-0.30,-0.29,0.29,0.23,0.26,-0.05,0.33,0.05,0.40)*f20+mat4(0.17,-0.11,-0.39,0.13,-0.23,-0.09,0.05,0.24,-0.00,-0.19,-0.06,-0.12,-0.25,0.27,-0.17,0.32)*f21+mat4(-0.45,0.24,0.00,-0.37,-0.27,-0.23,-0.22,0.20,-0.05,0.06,-0.12,0.10,-0.36,0.21,-0.07,-0.29)*f22+mat4(-0.11,0.27,0.34,-0.23,0.43,-0.35,-0.42,0.40,0.30,0.03,0.44,-0.34,0.37,-0.02,0.11,-0.03)*f23+mat4(0.33,-0.29,0.06,0.25,-0.21,0.07,0.21,0.20,-0.31,-0.06,0.13,0.19,-0.11,-0.07,0.04,-0.45)*f24+mat4(-0.01,0.25,0.03,0.05,-0.36,0.08,-0.27,0.26,-0.31,-0.30,-0.03,-0.05,0.24,-0.35,-0.37,-0.51)*f25+mat4(-0.30,-0.36,-0.07,-0.20,-0.06,0.10,-0.36,0.12,0.15,0.07,-0.14,0.24,0.32,0.34,-0.14,-0.12)*f26+mat4(-0.10,0.10,-0.33,-0.20,0.11,-0.28,0.01,-0.47,0.15,-0.04,0.26,-0.05,-0.04,0.23,0.23,0.07)*f27+vec4(0.16,0.31,0.34,0.28));    
      vec4 f40=sin(mat4(-0.15,-0.48,0.37,-0.05,-0.09,0.11,-0.01,-0.08,-0.36,-0.33,0.09,0.01,-0.44,-0.30,-0.11,0.34)*f30+mat4(0.00,-0.29,0.39,-0.00,-0.04,0.18,-0.09,-0.29,-0.19,-0.25,-0.06,-0.35,-0.44,-0.06,-0.33,-0.22)*f31+mat4(-0.01,-0.20,-0.09,0.03,-0.17,0.13,0.12,-0.04,-0.10,0.29,0.08,0.13,0.32,-0.52,0.61,-0.40)*f32+mat4(0.01,0.02,-0.39,0.14,-0.30,-0.29,0.44,-0.17,-0.07,-0.08,0.08,-0.13,-0.20,0.12,-0.18,-0.13)*f33+mat4(-0.17,0.45,0.07,0.06,0.24,-0.20,-0.02,0.53,0.10,0.15,-0.12,-0.03,-0.20,0.23,0.43,-0.17)*f34+mat4(0.09,-0.10,-0.39,-0.44,-0.41,-0.00,0.28,0.24,0.12,0.16,-0.50,-0.07,-0.23,0.10,-0.39,0.13)*f35+mat4(0.28,-0.19,-0.16,-0.03,-0.10,0.12,0.28,0.00,0.07,-0.08,0.15,-0.21,-0.36,-0.33,0.31,0.25)*f36+mat4(-0.17,-0.07,-0.38,-0.01,-0.17,-0.02,0.13,0.19,0.24,0.19,-0.12,-0.13,-0.10,-0.12,-0.00,0.43)*f37+vec4(-0.31,-0.27,-0.10,0.02));
      vec4 f41=sin(mat4(0.29,0.33,-0.23,0.46,0.25,0.10,0.25,0.29,0.09,0.03,0.23,0.45,0.21,0.24,0.10,0.33)*f30+mat4(-0.20,-0.37,-0.19,-0.01,-0.11,0.26,-0.03,-0.18,-0.15,-0.58,-0.14,-0.00,0.08,0.40,0.25,-0.17)*f31+mat4(-0.14,-0.29,0.36,-0.05,-0.29,0.13,0.12,0.07,0.37,0.04,0.34,0.14,0.21,-0.21,-0.38,0.35)*f32+mat4(-0.39,0.37,-0.13,0.13,0.00,0.19,0.31,0.28,-0.21,-0.21,0.31,0.02,0.12,0.34,-0.18,-0.16)*f33+mat4(-0.33,-0.14,0.04,0.15,0.37,-0.31,-0.25,0.21,-0.15,0.14,0.04,0.06,0.24,-0.38,0.20,0.03)*f34+mat4(0.24,0.53,0.14,-0.02,-0.02,-0.21,0.03,0.01,0.03,-0.13,0.28,0.34,0.03,-0.09,-0.15,-0.04)*f35+mat4(0.01,0.13,0.05,-0.14,0.19,0.03,0.36,-0.28,0.17,-0.08,0.11,-0.31,0.28,-0.22,0.18,0.18)*f36+mat4(-0.41,-0.27,0.04,0.20,-0.00,-0.05,0.49,-0.12,0.14,0.19,-0.19,0.34,-0.23,-0.14,-0.41,-0.11)*f37+vec4(-0.28,-0.30,-0.07,-0.24));
      vec4 f42=sin(mat4(-0.19,0.25,-0.23,0.29,-0.26,0.01,-0.09,-0.23,0.14,0.39,-0.27,-0.31,0.31,0.13,-0.25,0.24)*f30+mat4(0.41,0.22,0.21,-0.33,0.08,0.25,0.38,-0.32,0.33,-0.28,0.15,0.08,-0.16,-0.41,0.25,0.16)*f31+mat4(-0.36,0.66,-0.49,0.33,-0.28,0.45,-0.19,-0.02,-0.27,-0.25,-0.01,0.22,0.13,-0.34,0.26,0.35)*f32+mat4(0.06,0.25,0.15,-0.46,-0.25,0.33,0.12,-0.37,0.20,0.11,-0.37,0.11,-0.27,0.22,0.22,0.11)*f33+mat4(0.36,-0.30,0.20,0.27,0.19,0.43,-0.35,0.45,-0.38,0.50,-0.10,-0.13,0.28,-0.47,-0.41,-0.23)*f34+mat4(-0.12,-0.09,0.24,0.20,-0.08,-0.02,0.04,-0.43,0.05,0.15,0.10,0.24,-0.01,0.30,0.30,-0.06)*f35+mat4(0.26,0.34,-0.53,0.12,0.15,-0.34,0.01,0.44,0.05,0.31,-0.12,0.01,0.14,0.09,0.19,-0.13)*f36+mat4(0.15,0.05,0.17,0.16,0.27,0.34,0.31,0.35,0.05,-0.03,-0.14,0.30,-0.24,0.26,-0.04,0.01)*f37+vec4(-0.11,-0.24,0.30,0.29));
      vec4 f43=sin(mat4(0.22,-0.08,-0.27,-0.13,0.23,-0.01,-0.25,-0.23,0.45,-0.15,-0.39,0.40,-0.19,0.23,-0.34,0.02)*f30+mat4(0.02,0.46,-0.24,0.21,-0.22,0.25,-0.19,-0.41,0.08,-0.04,0.28,0.17,0.31,-0.32,0.28,0.12)*f31+mat4(-0.00,0.41,-0.24,0.52,-0.23,0.21,0.03,0.34,-0.20,0.40,-0.20,-0.58,0.21,0.00,-0.31,-0.17)*f32+mat4(0.49,0.05,-0.23,-0.13,-0.04,-0.15,-0.35,-0.09,-0.01,-0.12,0.01,-0.08,-0.24,-0.30,-0.05,-0.21)*f33+mat4(-0.42,-0.16,0.01,-0.26,-0.14,0.51,-0.33,-0.18,-0.15,-0.07,-0.27,-0.05,0.10,0.37,-0.19,-0.16)*f34+mat4(-0.06,0.04,0.14,0.20,0.07,-0.24,-0.02,-0.02,-0.06,0.21,0.13,-0.27,-0.05,0.25,0.08,0.17)*f35+mat4(-0.41,-0.29,-0.05,0.39,0.22,0.10,-0.04,-0.05,0.13,0.39,-0.22,0.11,0.12,0.41,-0.16,-0.26)*f36+mat4(0.07,-0.27,-0.04,0.15,-0.23,0.27,-0.33,-0.05,-0.01,0.21,-0.17,0.48,-0.15,0.23,0.19,0.06)*f37+vec4(-0.19,0.01,-0.31,0.14));
      vec4 f44=sin(mat4(0.20,0.04,-0.28,-0.04,0.17,-0.02,-0.17,-0.36,-0.35,-0.34,-0.19,0.37,0.49,0.02,-0.47,0.04)*f30+mat4(-0.20,-0.02,-0.39,0.35,-0.20,-0.05,0.09,0.24,0.35,-0.03,-0.06,0.34,0.19,0.02,-0.35,0.21)*f31+mat4(0.29,0.20,-0.47,-0.07,-0.04,-0.07,0.13,-0.15,0.22,0.12,-0.42,-0.30,0.37,0.66,-0.65,-0.01)*f32+mat4(0.15,-0.29,-0.24,0.37,-0.24,-0.14,-0.27,-0.28,-0.12,-0.22,0.19,0.31,0.10,-0.21,-0.05,-0.30)*f33+mat4(-0.29,-0.41,-0.02,-0.34,-0.29,-0.51,-0.11,-0.16,0.27,0.19,0.37,0.09,-0.14,0.27,-0.12,-0.03)*f34+mat4(-0.17,-0.40,0.30,-0.47,0.29,0.38,0.35,0.16,0.07,-0.18,-0.03,0.26,0.02,-0.21,0.34,-0.44)*f35+mat4(-0.37,0.13,-0.00,0.00,-0.39,0.23,-0.39,-0.02,0.34,0.34,0.06,-0.07,0.39,0.34,-0.20,0.22)*f36+mat4(-0.31,-0.33,0.15,-0.26,0.24,0.06,0.06,0.33,0.28,-0.10,-0.11,0.21,-0.31,0.14,-0.33,0.19)*f37+vec4(-0.31,0.20,0.31,-0.29)); 
      vec4 f45=sin(mat4(-0.48,-0.28,0.23,0.27,-0.20,-0.23,-0.25,0.22,-0.01,0.41,0.20,0.46,-0.43,0.25,-0.08,-0.50)*f30+mat4(0.36,0.15,0.45,0.35,0.16,0.10,-0.14,-0.29,-0.18,0.26,-0.67,-0.23,-0.45,0.54,0.18,0.03)*f31+mat4(-0.56,-0.21,-0.41,0.25,0.32,0.10,0.02,-0.12,-0.28,0.15,0.24,-0.21,0.09,-0.13,0.24,-0.57)*f32+mat4(-0.11,0.34,0.29,-0.22,0.43,0.01,-0.23,0.13,-0.21,0.48,0.19,-0.08,0.57,-0.23,0.13,-0.23)*f33+mat4(-0.12,0.23,0.05,0.42,-0.15,-0.13,0.18,-0.09,-0.05,-0.48,-0.46,0.16,-0.21,-0.27,-0.39,-0.04)*f34+mat4(-0.48,-0.05,0.20,0.08,-0.22,-0.45,0.27,-0.04,-0.16,0.30,0.09,-0.07,-0.13,0.15,-0.21,-0.10)*f35+mat4(-0.38,-0.32,-0.37,-0.02,-0.13,0.29,0.02,0.14,0.24,0.23,0.05,-0.06,-0.56,-0.17,-0.09,-0.06)*f36+mat4(0.28,-0.29,0.41,-0.36,-0.27,0.03,0.21,0.21,-0.09,-0.14,-0.11,0.34,0.14,-0.61,-0.33,-0.36)*f37+vec4(-0.19,-0.14,0.01,-0.04));
      vec4 f46=sin(mat4(0.34,0.25,-0.41,-0.27,0.25,-0.10,0.46,-0.20,-0.02,0.08,-0.09,0.06,0.23,-0.17,-0.19,-0.08)*f30+mat4(0.33,0.11,-0.30,-0.28,0.17,0.01,0.16,0.23,-0.38,0.20,-0.28,0.18,-0.12,0.20,-0.34,0.21)*f31+mat4(-0.05,-0.05,-0.43,0.26,0.13,-0.00,0.24,0.17,0.19,-0.43,0.53,-0.27,-0.36,0.05,-0.47,0.42)*f32+mat4(0.05,-0.27,-0.02,0.08,-0.33,-0.05,0.42,0.36,0.10,-0.15,0.36,0.06,-0.15,-0.13,-0.14,-0.36)*f33+mat4(-0.11,-0.31,0.40,-0.24,0.10,-0.34,0.00,0.36,-0.21,0.02,0.02,0.31,0.07,0.49,0.29,-0.07)*f34+mat4(-0.39,-0.04,-0.15,0.18,-0.00,0.22,0.22,0.39,-0.36,-0.19,0.07,0.45,0.11,0.03,-0.20,0.08)*f35+mat4(-0.14,-0.31,-0.26,0.28,-0.02,-0.06,0.08,-0.03,-0.47,0.07,0.40,-0.01,0.29,-0.13,-0.19,0.15)*f36+mat4(-0.34,0.06,-0.02,-0.06,0.16,0.35,0.33,0.03,-0.36,-0.33,0.29,0.14,0.06,-0.36,0.29,-0.17)*f37+vec4(0.30,0.18,-0.16,-0.29));        
      vec4 f47=sin(mat4(0.32,-0.09,-0.06,-0.22,-0.43,0.15,-0.25,-0.09,-0.24,-0.11,0.12,0.10,0.24,0.37,-0.47,-0.14)*f30+mat4(-0.13,-0.05,0.29,-0.04,-0.30,-0.05,-0.54,0.19,0.04,0.16,-0.11,0.05,0.02,0.22,-0.31,-0.12)*f31+mat4(-0.19,0.23,-0.16,-0.14,-0.29,-0.21,0.49,-0.44,0.25,0.30,-0.20,-0.23,-0.05,0.44,-0.80,-0.17)*f32+mat4(0.22,-0.02,-0.31,0.06,-0.10,-0.02,0.04,-0.31,0.27,-0.01,-0.16,0.09,0.18,0.22,-0.41,-0.08)*f33+mat4(-0.46,-0.15,-0.18,-0.22,0.14,-0.21,0.09,-0.29,-0.24,-0.40,-0.28,0.33,0.23,0.14,-0.00,-0.37)*f34+mat4(-0.06,0.05,-0.26,0.17,-0.25,0.32,0.31,-0.16,-0.13,0.28,-0.23,0.19,-0.37,-0.38,-0.32,-0.31)*f35+mat4(-0.16,-0.04,0.00,-0.11,-0.08,-0.46,-0.21,-0.16,0.28,-0.00,-0.05,0.40,-0.19,-0.07,-0.09,0.34)*f36+mat4(-0.15,0.30,-0.42,-0.00,0.14,-0.17,-0.40,0.17,0.09,-0.00,0.01,0.26,0.04,0.09,-0.58,-0.56)*f37+vec4(0.16,0.31,0.34,0.28));
      vec4 outc=f40*mat4(0.11,-0.08,0.19,0.00,0.06,0.05,-0.54,0.00,0.31,-0.33,-0.24,0.00,-0.42,-0.37,-0.53,0.00)+f41*mat4(-0.24,-0.41,-0.57,0.00,-0.27,0.28,-0.08,0.00,0.17,-0.18,-0.33,0.00,0.30,-0.17,0.21,0.00)+f42*mat4(0.45,0.18,0.30,0.00,0.44,0.38,0.44,0.00,0.07,0.17,0.33,0.00,-0.44,-0.10,-0.36,0.00)+f43*mat4(0.33,0.21,0.48,0.00,0.13,0.03,0.25,0.00,-0.13,0.21,0.36,0.00,0.12,0.37,-0.10,0.00)+f44*mat4(0.49,0.22,0.30,0.00,-0.19,-0.08,-0.32,0.00,0.39,-0.05,-0.07,0.00,0.62,0.65,0.59,0.00)+f45*mat4(-0.40,-0.19,-0.24,0.00,0.56,0.43,-0.23,0.00,-0.44,-0.36,-0.32,0.00,-0.21,-0.06,0.12,0.00)+f46*mat4(0.51,0.26,0.10,0.00,0.06,-0.45,-0.69,0.00,-0.50,-0.56,-0.70,0.00,0.47,0.36,-0.12,0.00)+f47*mat4(-0.11,0.36,-0.03,0.00,-0.08,-0.01,-0.40,0.00,0.18,-0.28,-0.35,0.00,0.36,0.28,0.47,0.00)+vec4(0.50,-0.16,0.26,0.00);
      vec3 color;
      color.x = 1.0 / ( 1.0 + pow(2.71828, -outc.x));
      color.y = 1.0 / ( 1.0 + pow(2.71828, -outc.y));
      color.z = 1.0 / ( 1.0 + pow(2.71828, -outc.z));
      gl_FragColor.rgba = vec4(color, 1.0);
    }
  `
);

type NnLightmapMaterialImpl = {
    lm0: Texture,
    lm1: Texture,
    lm2: Texture,
    lm3: Texture,
    lm4: Texture,
    lm5: Texture,
    lm6: Texture,
    lm7: Texture,
  } & JSX.IntrinsicElements['meshBasicMaterial'];

declare global {
  namespace JSX {
    interface IntrinsicElements {
      nnLightmapMaterial: NnLightmapMaterialImpl;
    }
  }
}